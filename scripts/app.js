(function(){var n;n=function(){function n(){return["templates","ngResource","ngRoute"]}return n}(),angular.module("app",new n)}).call(this);
(function(){var e;e=function(){function e(e,r,t){e.when("/",{templateUrl:"/partials/views/home.html"}).when("/infos/:service/:value/:repo?",{controller:"infosController",templateUrl:function(e){return"/partials/views/infos/"+e.service+".html"}}).otherwise({redirectTo:"/"}),t.html5Mode(!0),r.interceptors.push("HttpRequestInterceptor")}return e}(),angular.module("app").config(["$routeProvider","$httpProvider","$locationProvider",e])}).call(this);
(function(){var n;n=function(){function n(n){this.$scope=n,this.init()}return n.prototype.init=function(){},n}(),angular.module("app").controller("appController",["$scope",n])}).call(this);
(function(){var t;t=function(){function t(){return{restrict:"E",templateUrl:"/partials/directives/results_github.html",controller:"resultsGithubController"}}return t}(),angular.module("app").directive("resultsGithubDirective",[t])}).call(this);
(function(){var r;r=function(){function r(){return{restrict:"E",templateUrl:"/partials/directives/search_github.html",controller:"searchGithubController"}}return r}(),angular.module("app").directive("searchGithubDirective",[r])}).call(this);
(function(){var r;r=function(){function r(){var r,t,e;return r="6d994841237006e30c62",t="6766cdfb1223093895862376fb7d5fc45e7b7285",e="client_id="+r+"&client_secret="+t+"&per_page=30",{request:function(){return function(r){return r.url.indexOf("api.github")>0&&(r.url=r.url.indexOf("?")>0?r.url+("&"+e):r.url+("?"+e)),r}}(this)}}return r}(),angular.module("app").factory("HttpRequestInterceptor",[r])}).call(this);
(function(){var e;e=function(){function e(e,r){return{get_users:function(t){var n,u,s,o;return n=e.defer(),s=r.list_user_repos({username:t.value}),o=r.get({service:t.service,value:t.value,repo:t.repo}),u=r.list_followers({username:t.value}),e.all({user:o.$promise.then(function(e){return e}),followers:u.$promise.then(function(e){return e}),repos:s.$promise.then(function(e){return e})}).then(function(e){return n.resolve(e)})["catch"](function(){return function(e){return n.reject(e)}}(this)),n.promise},get_orgs:function(t){var n,u,s,o;return n=e.defer(),s=r.get({service:t.service,value:t.value,repo:t.repo}),u=r.members_list({org:t.value}),o=r.list_org_repos({org:t.value}),e.all({org:s.$promise.then(function(e){return e}),members:u.$promise.then(function(e){return e}),repos:o.$promise.then(function(e){return e})}).then(function(e){return n.resolve(e)})["catch"](function(){return function(e){return n.reject(e)}}(this)),n.promise},get_repos:function(t){var n,u,s,o,i;return u=e.defer(),i=r.get({service:t.service,value:t.value,repo:t.repo}),o=r.list_pull_requests({owner:t.value,repo:t.repo}),s=r.list_issues({owner:t.value,repo:t.repo}),n=r.list_commits({owner:t.value,repo:t.repo}),e.all({repo:i.$promise.then(function(e){return e}),pull_requests:o.$promise.then(function(e){return e}),issues:s.$promise.then(function(e){return e}),commits:n.$promise.then(function(e){return e})}).then(function(e){return u.resolve(e)})["catch"](function(){return function(e){return u.reject(e)}}(this)),u.promise},search:function(t,n){var u,s;return u=e.defer(),s=r.search({type:t,value:n}),s.$promise.then(function(){return function(e){return u.resolve(e)}}(this))["catch"](function(){return function(e){return u.reject(e.status)}}(this)),u.promise},full_search:function(r){var t;return t=e.defer(),e.all({users:this.search("users",r),repos:this.search("repositories",r)}).then(function(e){return e.orgs=_.filter(e.users.items,{type:"Organization"}),e.users=_.filter(e.users.items,{type:"User"}),e.repos=e.repos.items,t.resolve(e)})["catch"](function(){return function(e){return t.reject(e)}}(this)),t.promise}}}return e}(),angular.module("app").service("githubService",["$q","githubAPIService",e])}).call(this);
(function(){var t,n=function(t,n){return function(){return t.apply(n,arguments)}};t=function(){function t(t,o){this.$scope=t,this.$rootScope=o,this.init=n(this.init,this),this.init()}return t.prototype.init=function(){return this.set_listeners()},t.prototype.set_listeners=function(){return this.$rootScope.$on("GithubSearchDone",function(t){return function(n,o){return t.$scope.results=o}}(this))},t}(),angular.module("app").controller("resultsGithubController",["$scope","$rootScope",t])}).call(this);
(function(){var t,e=function(t,e){return function(){return t.apply(e,arguments)}};t=function(){function t(t,r,i,n){this.$scope=t,this.$rootScope=r,this.$timeout=i,this.githubService=n,this.search=e(this.search,this),this.keyup_handler=e(this.keyup_handler,this),this.init=e(this.init,this),this.init()}return t.prototype.init=function(){return this.declare_scope_vars(),this.define_template_methods()},t.prototype.declare_scope_vars=function(){return this.search_timeout=null,this.$scope.form={}},t.prototype.define_template_methods=function(){return this.$scope.keyup_handler=this.keyup_handler},t.prototype.keyup_handler=function(){return this.search_timeout&&this.$timeout.cancel(this.search_timeout),this.search_timeout=this.$timeout(function(t){return function(){return t.search(t.$scope.form.search_value)}}(this),500)},t.prototype.search=function(t){var e;return e=this.githubService.full_search(t),e.then(function(t){return function(e){return t.$rootScope.$broadcast("GithubSearchDone",e)}}(this))["catch"](function(t){return function(e){return t.$rootScope.$broadcast("GithubSearchDone",e)}}(this))},t}(),angular.module("app").controller("searchGithubController",["$scope","$rootScope","$timeout","githubService",t])}).call(this);
(function(){var e,t=function(e,t){return function(){return e.apply(t,arguments)}};e=function(){function e(e,r,s,i){this.$scope=e,this.$filter=r,this.$routeParams=s,this.githubService=i,this.filter_repos_by=t(this.filter_repos_by,this),this.get_repo_type_length=t(this.get_repo_type_length,this),this.init()}return e.prototype.init=function(){return this.declare_scope_vars(),this.declare_template_methods(),this.get()},e.prototype.declare_scope_vars=function(){return this.$scope.is_repos_filtered=!1},e.prototype.declare_template_methods=function(){return this.$scope.get_repo_type_length=this.get_repo_type_length,this.$scope.filter_repos_by=this.filter_repos_by},e.prototype.get_repo_type_length=function(e,t){var r,s;return r=this.build_filter(e,t),s=_.filter(this.$scope.result.users.repos,r),s.length},e.prototype.filter_repos_by=function(e,t){var r,s;return this.$scope.is_repos_fork=t,r=this.build_filter(e,t),this.repos_bkp||(this.repos_bkp=this.$scope.result.users.repos),s=this.repos_bkp,void 0!==t?(this.$scope.result.users.repos=_.filter(s,r),this.$scope.is_repos_filtered=!0):(this.$scope.result.users.repos=this.repos_bkp,this.$scope.is_repos_filtered=!1),this.$scope.result.users.repos},e.prototype.build_filter=function(e,t){var r;return r={},r[e]=t,r},e.prototype.get=function(){var e;return e=this.githubService["get_"+this.$routeParams.service]({service:this.$routeParams.service,value:this.$routeParams.value,repo:this.$routeParams.repo}),e.then(function(e){return function(t){return e.$scope.result={},e.$scope.result[e.$routeParams.service]=t}}(this))},e}(),angular.module("app").controller("infosController",["$scope","$filter","$routeParams","githubService",e])}).call(this);
(function(){var s;s=function(){function s(s){var r,e;return this.$resource=s,r="https://api.github.com/",e=this.$resource(r,{},{search:{method:"GET",url:r+"search/:type?q=:value"},get:{method:"GET",url:r+":service/:value/:repo"},members_list:{method:"GET",url:r+"orgs/:org/members",isArray:!0},list_org_repos:{method:"GET",url:r+"orgs/:org/repos",isArray:!0},list_pull_requests:{method:"GET",url:r+"repos/:owner/:repo/pulls",isArray:!0},list_issues:{method:"GET",url:r+"repos/:owner/:repo/issues",isArray:!0},list_commits:{method:"GET",url:r+"repos/:owner/:repo/commits",isArray:!0},list_followers:{method:"GET",url:r+"users/:username/followers",isArray:!0},list_user_repos:{method:"GET",url:r+"users/:username/repos",isArray:!0}}),{search:e.search,get:e.get,members_list:e.members_list,list_org_repos:e.list_org_repos,list_pull_requests:e.list_pull_requests,list_issues:e.list_issues,list_commits:e.list_commits,list_followers:e.list_followers,list_user_repos:e.list_user_repos}}return s}(),angular.module("app").service("githubAPIService",["$resource",s])}).call(this);